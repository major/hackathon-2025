[project]
name = "hackathon"
version = "0.1.0"
description = "RAG system with BM25-only contextual retrieval (no vectors!)"
readme = "README.md"
authors = [{ name = "Major Hayden", email = "major@mhtx.net" }]
requires-python = ">=3.12,<3.13"
dependencies = [
    "anytree>=2.13.0",
    "bm25s>=0.2.14",
    "docling>=2.15.0",
    "ibm-watson-machine-learning>=1.0.368",
    "ibm-watsonx-ai>=1.4.0",
    "psycopg2-binary>=2.9.0",
    "pydantic-settings>=2.7.0",
    "pydantic>=2.10.0",
    "python-frontmatter>=1.1.0",
    "rich>=14.1.0",
    "sqlalchemy>=2.0.0",
]


[project.scripts]
process = "hackathon.cli.process:main"
query = "hackathon.cli.query:main"
clean = "hackathon.cli.clean:main"
download-tokenizer = "hackathon.cli.download_tokenizer:main"

[dependency-groups]
dev = [
    "pyright>=1.1.406",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-randomly>=4.0.1",
    "radon>=6.0.1",
    "ruff>=0.9.1",
    "vulture>=2.14",
]

# Docling will attempt to pull in torch/torchvision along with TONS of cuda dependencies,
# so we avoid that by forcing a CPU-only install.
[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch-cpu" }
torchvision = { index = "pytorch-cpu" }

[build-system]
requires = ["uv_build>=0.9.0,<0.10.0"]
build-backend = "uv_build"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-branch",
    "--color=yes",
    # "--cov-report=html",
    # "--cov-report=xml",
]
# Having problems with tests? Uncomment the following line to see more output.
# log_cli = false
# log_level = "DEBUG"
log_format = "%%(asctime)s %%(levelname)s %%(message)s"
log_date_format = "%%Y-%%m-%%d %%H:%%M:%%S"
testpaths = ["tests"]

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.ruff]
fix = true

[tool.ruff.format]
preview = true
